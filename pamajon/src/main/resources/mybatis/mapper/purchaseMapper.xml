<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pamajon.mapper.PurchaseMapper">

    <resultMap id="memberResultSet" type="com.pamajon.order.model.vo.Member">
        <result property="userId" column="USER_ID"/>
        <result property="memberName" column="MEM_NAME"/>
        <result property="memberPhone" column="MEM_PHONE"/>
        <result property="memberEmail" column="MEMBER_EMAIL"/>
        <result property="memberGrade" column="MEM_GRADE"/>
        <result property="memberDate" column="MEM_DATE"/>
        <result property="memberStatus" column="MEM_STATUS"/>
    </resultMap>

    <resultMap id="mileageResultSet" type="com.pamajon.order.model.vo.MileageDto">
        <result property="mileId" column="MILE_ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="mileage" column="MILE"/>
        <result property="mileageContent" column="MILE_CONTENT"/>
    </resultMap>

    <resultMap id="productOptionDtoResultSet" type="com.pamajon.order.model.vo.ProductOptionDto">
        <result property="optionId" column="P_OPTION_ID"/>
        <result property="productId" column="PRODUCT_ID"/>
        <result property="optionSize" column="P_SIZE"/>
        <result property="productPrice" column="PRODUCT_PRICE"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productThumbnailImage" column="PRO_IMG_NAME"/>
        <result property="productOptionSalesRate" column="P_SALES_RATE"/>
        <result property="productOptionStatus" column="P_OPTION_STATUS"/>
    </resultMap>

    <!--Member 객체 조회 할 경우 Member 패키지에 있는 member 클래스에 담겨야함-->
    <resultMap id="sessionMemberResultSet" type="com.pamajon.member.model.vo.Member">
        <result property="memEmail" column="MEMBER_EMAIL"/>
    </resultMap>



    <select id="getMember" parameterType="integer" resultMap="memberResultSet">
        SELECT
              M.USER_ID AS USER_ID
             ,M.MEM_NAME  AS MEM_NAME
             ,M.MEM_GRADE AS MEM_GRADE
             ,M.MEM_PHONE AS MEM_PHONE
             ,MI.MEMBER_EMAIL AS MEMBER_EMAIL
        FROM
             `MEMBER` M,
             `MEMBER_ID` MI
        WHERE
             1=1
          AND
              M.USER_ID = MI.USER_ID
          AND
             M.USER_ID=#{memNo}


    </select>

    <select id="getMileage" parameterType="integer" resultMap="mileageResultSet">
        SELECT
            USER_ID,
            SUM(MILE) AS MILE
        FROM
            MILEAGE
        WHERE
            1=1
          AND USER_ID=#{userId}
          AND MILE_TYPE='+'
        GROUP BY USER_ID;
    </select>

    <select id="getAddressId" resultType="integer">
        SELECT
            NEXTVAL(SEQ_ADLIST)
    </select>

    <insert id="createAddress" parameterType="com.pamajon.order.model.vo.AddressDto">
        INSERT INTO
            ADDRESS_LIST
        (
            ADDR_ID,
            USER_ID,
            ADDR_NAME,
            ADDR_RECEIVER,
            ADDR_ZIPCODE,
            ADDR,
            ADDR_DETAIL,
            ADDR_CELLPHONE,
            ADDR_PHONE,
            ADDR_STATUS
        )
        VALUES
        (
            #{addrId},
            #{userId},
            '임시주소',
            #{addrReceiver},
            #{addrZipcode},
            #{addr},
            #{addrDetail},
            #{addrCellPhone},
            #{addrPhone},
            '1'
        )
    </insert>
    <insert id="createOrder" parameterType="com.pamajon.order.model.vo.OrderDto">
        INSERT INTO
                ORDER_P
            (
                ORDER_ID,
                USER_ID,
                ADDR_ID,
                ORDER_ADDR,
                ORDER_STATUS,
                ORDER_PHONE,
                ORDER_EMAIL,
                ORDER_MESSAGE,
                ORDER_PURCHASE,
                ORDER_DELI_STATUS,
                ORDER_DATE,
                ORDER_CARDNUM,
                ORDER_TRANS_NAME,
                ORDER_METHOD,
                ORDER_ACCNUM,
                ORDER_KEY,
                ORDER_SHIPFEE
            )
            VALUES
            (
             NEXTVAL(SEQ_ORDER),
             #{userId},
             #{addrId},
             #{orderAddr},
             #{orderStatus},
             #{orderPhone},
             #{orderEmail},
             #{orderMessage},
             #{orderPurchase},
             #{orderDeliveryStatus},
             #{orderDate},
             #{orderCardNum},
             #{orderTransName},
             #{orderMethod},
             #{orderAccountNum},
             #{orderKey},
             #{orderShipfee}
            )
    </insert>
    <update id="insertMileage" parameterType="com.pamajon.order.model.vo.MileageDto">
       INSERT INTO
                 MILEAGE
                (
                MILE_ID,
                USER_ID,
                MILE,
                MILE_CONTENT,
                MILE_TYPE,
                MILE_DATE
                )
                VALUES
                (
                 NEXTVAL(SEQ_MILEAGE),
                 #{userId},
                 ${mileage},
                 '상품 구매 사용'
                 ,'-'
                 ,NOW()
                )
    </update>
    <update id="stackMileage" parameterType="com.pamajon.order.model.vo.MileageDto">
        INSERT INTO
            MILEAGE
        (
            MILE_ID,
            USER_ID,
            MILE,
            MILE_CONTENT,
            MILE_TYPE,
            MILE_DATE
        )
        VALUES
        (
            NEXTVAL(SEQ_MILEAGE),
            #{userId},
            ${mileage},
            '상품 구매 포인트'
            ,'+'
            ,NOW()
        )
    </update>
    <insert id="insertSold" parameterType="com.pamajon.order.model.vo.SoldDto">
        INSERT INTO
                   SOLD
                (
                SOLD_ID,
                ORDER_ID,
                P_OPTION_ID,
                SOLD_QUANTITY
                )
            VALUES
                (
                 NEXTVAL(SEQ_SOLD),
                 LASTVAL(SEQ_ORDER),
                 #{optionId},
                 #{soldQuantity}
                )
    </insert>

    <update id="modifyOptionStock" parameterType="com.pamajon.order.model.vo.ProductOptionDto">
        <selectKey resultType="string" keyProperty="productOptionStatus" order="BEFORE">
            SELECT
                P_OPTION_STATUS
            FROM
                 P_OPTION
            WHERE
                P_OPTION_ID=#{optionId}
        </selectKey>
        UPDATE
             P_OPTION
        <!-- 수량 제한이 있다면 재고 수량을 소진시켜줌-->
        <if test="productOptionStatus == 'limited'">
            SET
             P_QUAN=P_QUAN-${optionQuantity}
            ,P_SALES_RATE=P_SALES_RATE+${optionQuantity}
        </if>
        <!-- 수량 제한이 없다면 재고 수량 소진은 없고 판매량만 증가시킴 -->
        <if test="productOptionStatus == 'unlimited'">
            SET
            P_SALES_RATE=P_SALES_RATE+${optionQuantity}
        </if>
        WHERE
             P_OPTION_ID=#{optionId}
    </update>

    <select id="getProductOption" parameterType="com.pamajon.order.model.vo.ProductOptionDto" resultMap="productOptionDtoResultSet">
        SELECT
                 P.PRODUCT_ID AS PRODUCT_ID
                ,P.PRODUCT_NAME AS PRODUCT_NAME
                ,PO.P_OPTION_ID AS P_OPTION_ID
                ,P_SIZE
                ,P_QUAN
                ,PRODUCT_PRICE
                ,PRO_IMG_NAME
        FROM
                P_OPTION PO,
                PRODUCT P,
                PRO_IMAGE PIG
        WHERE
                1=1
        AND
                PO.PRODUCT_ID = PIG.PRODUCT_ID
        AND
                P.PRODUCT_ID = PO.PRODUCT_ID
        AND
                PIG.PRO_IMG_ISDEFAULT ='1'
        AND
                 PO.P_OPTION_ID=${optionId}
    </select>

    <select id="getUserEmail" resultType="string" parameterType="int">
        SELECT
              MEMBER_EMAIL
          FROM
              MEMBER_ID
         WHERE
              USER_ID=#{userId}
    </select>

</mapper>    