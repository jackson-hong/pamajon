<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

    <insert id="memberInsert" parameterType="map">
        INSERT INTO MEMBER
        (
            user_id,
            mem_name,
            mem_phone,
            mem_grade,
            mem_date,
            mem_status
        )
        VALUES (
                NEXTVAL(SEQ_MEMBER),
                #{name},
                #{phone},
                '일반회원',
                SYSDATE(),
                0
               );
    </insert>

    <insert id="memberEmailInsert" parameterType="map">
        INSERT INTO MEMBER_ID(
            USER_ID,
            MEMBER_EMAIL,
            MEMBER_PASSWD,
            MEMBER_ISSOCIAL
        )VALUES (
            #{usid},
            #{email},
            #{passwd},
            #{isSocial}
        )
    </insert>

    <insert id="insertAddr" parameterType="com.pamajon.member.model.vo.MemberAddr">
        INSERT INTO ADDRESS_LIST(
            ADDR_ID,
            USER_ID,
            ADDR_PHONE,
            ADDR_NAME,
            ADDR_RECEIVER,
            ADDR_ZIPCODE,
            ADDR,
            ADDR_DETAIL,
            ADDR_CELLPHONE,
            ADDR_STATUS)
        VALUES (
                NEXTVAL(SEQ_ADLIST),
                #{userId},
                #{addrPhone},
                #{addrName},
                #{addrReceiver},
                #{addrZipcode},
                #{addr},
                #{addrDetail},
                #{addrPhone},
                #{addrStatus}
               )

    </insert>

    <select id="selectOneByEmail" parameterType="map" resultType="int">
        SELECT count(MEMBER_EMAIL) FROM MEMBER_ID WHERE MEMBER_EMAIL = #{EMAIL};
    </select>

    <select id="selectMemByUsid" parameterType="int" resultMap="selectMem">
        SELECT * FROM MEMBER WHERE USER_ID = #{usid}
    </select>

    <select id="selectOneByMemId" parameterType="map" resultMap="loginMap">
        SELECT USER_ID, MEMBER_ISSOCIAL, MEMBER_PASSWD FROM MEMBER_ID WHERE MEMBER_EMAIL = #{email}
    </select>
    
    <select id="selectOneByNamePhone" parameterType="map" resultType="int">
        SELECT user_id FROM MEMBER WHERE mem_name = #{name} AND mem_phone = #{phone}
    </select>

    <select id="kakaoSelectUsidByEmailName" parameterType="map" resultType="int">
        SELECT USER_ID FROM MEMBER_ID WHERE MEMBER_EMAIL = #{email}
    </select>

    <select id="countMembersByNamePhone" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM MEMBER WHERE mem_name = #{name} AND mem_phone = #{phone}
    </select>

    <select id="countAddr" parameterType="int" resultType="int">
        SELECT count(*) from ADDRESS_LIST WHERE USER_ID = #{usid}
    </select>

    <select id="selectAddrList" parameterType="int" resultMap="selectAddrList">
        SELECT * from ADDRESS_LIST WHERE USER_ID = #{usid}
    </select>

    <select id="selectAddr" parameterType="int" resultMap="selectAddrList">
        SELECT * from ADDRESS_LIST WHERE ADDR_ID = #{addrId}
    </select>

    <update id="updatePasswd" parameterType="map">
        UPDATE MEMBER_ID SET MEMBER_PASSWD = #{passwd} WHERE MEMBER_EMAIL = #{email}
    </update>

    <insert id="mileageInsert" parameterType="map">
        INSERT INTO MILEAGE VALUES (NEXTVAL(SEQ_MILEAGE), #{usid}, #{amount}, #{content}, #{type}, SYSDATE())
    </insert>

    <select id="mileageSelect" parameterType="int" resultMap="mileageSelect">
        SELECT * from MILEAGE WHERE USER_ID = #{usid} ORDER BY MILE_ID
    </select>

    <select id="wishlist" parameterType="int" resultType="map">
        SELECT * FROM WISHLIST LEFT JOIN PRODUCT P on P.PRODUCT_ID = WISHLIST.PRODUCT_ID
                               LEFT JOIN PRO_IMAGE PI on P.PRODUCT_ID = PI.PRODUCT_ID
        WHERE PRO_IMG_ISDEFAULT = 1 AND USER_ID = #{usid}
    </select>

    <select id="selectProductsForWish" resultType="map">
        SELECT * FROM PRODUCT
        <if test="wishList.size != 0">
            WHERE PRODUCT_ID IN
            <foreach collection="wishList" item="item" open="(" close=")" separator=",">
                #{item, jdbcType=INTEGER}
            </foreach>
        </if>
        <if test="wishList.size == 0">
            WHERE PRODUCT_ID = NULL
        </if>
    </select>

    <update id="addrUpdate" parameterType="com.pamajon.member.model.vo.MemberAddr">
        UPDATE ADDRESS_LIST SET ADDR_PHONE = #{addrPhone},
                                ADDR_NAME = #{addrName},
                                ADDR_RECEIVER = #{addrReceiver},
                                ADDR_ZIPCODE = #{addrZipcode},
                                ADDR = #{addr},
                                ADDR_DETAIL = #{addrDetail},
                                ADDR_CELLPHONE = #{addrCellPhone}
                            WHERE ADDR_ID = #{addrId}
    </update>

    <delete id="addrDelete" parameterType="string">
        DELETE FROM ADDRESS_LIST WHERE ADDR_ID = #{addrId}
    </delete>

    <delete id="wishDelete" parameterType="map">
        DELETE FROM WISHLIST WHERE PRODUCT_ID = #{proId} AND USER_ID = #{usid}
    </delete>
    
    <resultMap id="selectMem" type="com.pamajon.member.model.vo.Member">
        <result property="userId" column="USER_ID"/>
        <result property="memName" column="MEM_NAME"/>
        <result property="memPhone" column="MEM_PHONE"/>
        <result property="memGrade" column="MEM_GRADE"/>
        <result property="memDate" column="MEM_DATE"/>
        <result property="memStatus" column="MEM_STATUS"/>
    </resultMap>

    <resultMap id="selectAddrList" type="com.pamajon.member.model.vo.MemberAddr">
        <result property="addrId" column="ADDR_ID"/>
        <result property="addrCellPhone" column="ADDR_PHONE"/>
        <result property="addrName" column="ADDR_NAME"/>
        <result property="addrReceiver" column="ADDR_RECEIVER"/>
        <result property="addrZipcode" column="ADDR_ZIPCODE"/>
        <result property="addr" column="ADDR"/>
        <result property="addrDetail" column="ADDR_DETAIL"/>
        <result property="addrPhone" column="ADDR_CELLPHONE"/>
        <result property="addrStatus" column="ADDR_STATUS"/>
    </resultMap>

    <resultMap id="loginMap" type="HashMap">
        <result column="USER_ID" property="usid"/>
        <result column="MEMBER_ISSOCIAL" property="isSocial"/>
        <result column="MEMBER_PASSWD" property="passwd"/>
    </resultMap>

    <resultMap id="mileageSelect" type="com.pamajon.member.model.vo.Mileage">
        <result property="usid" column="USER_ID"/>
        <result property="amount" column="MILE"/>
        <result property="content" column="MILE_CONTENT"/>
        <result property="type" column="MILE_TYPE"/>
        <result property="date" column="MILE_DATE"/>
    </resultMap>
</mapper>